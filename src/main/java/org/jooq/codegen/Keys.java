/*
 * This file is generated by jOOQ.
 */
package org.jooq.codegen;


import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.codegen.tables.Account;
import org.jooq.codegen.tables.Expense;
import org.jooq.codegen.tables.Income;
import org.jooq.codegen.tables.Partition;
import org.jooq.codegen.tables.records.AccountRecord;
import org.jooq.codegen.tables.records.ExpenseRecord;
import org.jooq.codegen.tables.records.IncomeRecord;
import org.jooq.codegen.tables.records.PartitionRecord;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in the
 * default schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AccountRecord> ACCOUNT__PK_ACCOUNT = Internal.createUniqueKey(Account.ACCOUNT, DSL.name("pk_account"), new TableField[] { Account.ACCOUNT.UUID }, true);
    public static final UniqueKey<ExpenseRecord> EXPENSE__PK_EXPENSE = Internal.createUniqueKey(Expense.EXPENSE, DSL.name("pk_expense"), new TableField[] { Expense.EXPENSE.UUID }, true);
    public static final UniqueKey<IncomeRecord> INCOME__PK_INCOME = Internal.createUniqueKey(Income.INCOME, DSL.name("pk_income"), new TableField[] { Income.INCOME.UUID }, true);
    public static final UniqueKey<PartitionRecord> PARTITION__PK_PARTITION = Internal.createUniqueKey(Partition.PARTITION, DSL.name("pk_partition"), new TableField[] { Partition.PARTITION.UUID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<ExpenseRecord, AccountRecord> EXPENSE__FK_EXPENSE_PK_ACCOUNT = Internal.createForeignKey(Expense.EXPENSE, DSL.name("fk_expense_pk_account"), new TableField[] { Expense.EXPENSE.OWNER }, Keys.ACCOUNT__PK_ACCOUNT, new TableField[] { Account.ACCOUNT.UUID }, true);
    public static final ForeignKey<ExpenseRecord, PartitionRecord> EXPENSE__FK_EXPENSE_PK_PARTITION = Internal.createForeignKey(Expense.EXPENSE, DSL.name("fk_expense_pk_partition"), new TableField[] { Expense.EXPENSE.PARTITION }, Keys.PARTITION__PK_PARTITION, new TableField[] { Partition.PARTITION.UUID }, true);
    public static final ForeignKey<IncomeRecord, AccountRecord> INCOME__FK_INCOME_PK_ACCOUNT = Internal.createForeignKey(Income.INCOME, DSL.name("fk_income_pk_account"), new TableField[] { Income.INCOME.OWNER }, Keys.ACCOUNT__PK_ACCOUNT, new TableField[] { Account.ACCOUNT.UUID }, true);
    public static final ForeignKey<PartitionRecord, AccountRecord> PARTITION__FK_PARTITION_PK_ACCOUNT = Internal.createForeignKey(Partition.PARTITION, DSL.name("fk_partition_pk_account"), new TableField[] { Partition.PARTITION.OWNER }, Keys.ACCOUNT__PK_ACCOUNT, new TableField[] { Account.ACCOUNT.UUID }, true);
}
